name: Build-images

# TODO
# 1. Parrelled jobs
# 2. single envs, share steps output and reuse it
# 3. only run jobs if file has changed
# 4. ignore change in infra repo

# on:
#   pull_request:
#     branches:
#       - develop
#       - master
on: push

jobs:
  build-image:
    name: build frontend docker images
    runs-on: ubuntu-latest
    environment: AWS

    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - shell: bash
        env:
          aws: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "envs are $aws"

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push backend image to ECR
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ secrets.AWS_NEST_IMAGE_TAG }}
        run: |
          docker build -f ./server/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build and push frontend image to ECR
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ secrets.AWS_FRONTED_IMAGE_TAG }}
        run: |
          docker build -f ./web/Dockerfile-t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
